name: "CI"

env:
  API_KEY_ALCHEMY: ${{ secrets.API_KEY_ALCHEMY }}
  DEPLOYER_PKEY: ${{ secrets.DEPLOYER_PKEY }}
  AWS_FORK_URL: ${{ secrets.AWS_FORK_URL }}
  DEPLOYER_ADDRESS: ${{ secrets.DEPLOYER_ADDRESS }}
  FOUNDRY_PROFILE: "ci"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"

jobs:

  build:
    if: github.event_name == 'pull_request'
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Build the contracts and print their size"
        run: "forge build --sizes"

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test:
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Show the Foundry config"
        run: "forge config"

      - name: "Generate a fuzz seed that changes weekly to avoid burning through RPC allowance"
        run: >
          echo "FOUNDRY_FUZZ_SEED=$(
            echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
          )" >> $GITHUB_ENV

      - name: "Run the tests"
        run: "forge test"

      - name: "Add test summary"
        run: |
          echo "## Tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
  deploy_to_staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: "ubuntu-latest"
    permissions: "write-all"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Set deployer balance on the fork"
        run: |
          curl -X POST -H "Content-Type:application/json" --data \
          '{"jsonrpc":"2.0","method":"hardhat_setBalance","params":["'"${{ secrets.DEPLOYER_ADDRESS }}"'","0x75557863725914323419136"],"id":67}' \
          "${{ secrets.AWS_FORK_URL }}"

      - name: "Prepare Python environment"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: "Deploy the contracts"
        run:
          "forge script script/DeployContracts.s.sol --fork-url ${{ secrets.AWS_FORK_URL }} --broadcast -vvvvv --slow
          --skip-simulation"

      - name: Copy run-latest.json File
        run: |
          FILE_PATH=$(find /home/runner/work/SustainableLeverage/SustainableLeverage/cache/DeployContracts.s.sol -name 'run-latest.json')
          if [ -z "$FILE_PATH" ]; then
              echo "run-latest.json not found"
              exit 1 
          fi
          echo $GITHUB_WORKSPACE/deployments/1337-deployments.json
          echo $FILE_PATH
          cp "$FILE_PATH" $GITHUB_WORKSPACE/deployments/1337-deployments.json

      - name: "Commit the deployment changes"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Updating deployment.json address file
          push_options: --force

      - name: "Add deploy summary"
        run: |
          echo "## Deploy result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

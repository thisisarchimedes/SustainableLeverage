name: "CI"

env:
  API_KEY_ALCHEMY: ${{ secrets.API_KEY_ALCHEMY }}
  DEPLOYER_PKEY: ${{ secrets.DEPLOYER_PKEY }}
  AWS_FORK_URL: ${{ vars.AWS_FORK_URL }}
  DEPLOYER_ADDRESS: ${{ secrets.DEPLOYER_ADDRESS }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  API_KEY_TENDERLY: ${{ secrets.API_KEY_TENDERLY }}
  TENDERLY_VERIFIER_URL: ${{ secrets.TENDERLY_VERIFIER_URL }}
  FOUNDRY_PROFILE: "ci"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  build:
    if: github.event_name == 'pull_request'
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Build the contracts"
        run: "forge build --skip script"

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Slither
        uses: crytic/slither-action@v0.3.0
        id: slither
        with:
          node-version: 16
          fail-on: medium
          slither-args:
            --checklist --detect
            msg-value-loop,delegatecall-loop,controlled-delegatecall,controlled-array-length,arbitrary-send-erc20-permit,weak-prng,reentrancy-eth,abiencoderv2-array,arbitrary-send-erc20,array-by-reference,encode-packed-collision,incorrect-shift,multiple-constructors,name-reused,protected-vars,public-mappings-nested,rtlo,shadowing-state,suicidal,uninitialized-state,uninitialized-storage,unprotected-upgrade
            --filter-paths "lib|pseudo|test|script|openzeppelin*|forge-std*" --markdown-root ${{ github.server_url
            }}/${{ github.repository }}/blob/${{ github.sha }}/

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test:
    needs: ["build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Show the Foundry config"
        run: "forge config"

      - name: "Generate a fuzz seed that changes weekly to avoid burning through RPC allowance"
        run: >
          echo "FOUNDRY_FUZZ_SEED=$(
            echo $(($EPOCHSECONDS - $EPOCHSECONDS % 604800))
          )" >> $GITHUB_ENV

      - name: "Run the tests"
        run: "forge test"

      - name: "Add test summary"
        run: |
          echo "## Tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  deploy_to_ec2_hardhat_test_node:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: "ubuntu-latest"
    permissions: "write-all"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Set deployer balance on the fork"
        run: |
          curl -X POST -H "Content-Type:application/json" --data \
          '{"jsonrpc":"2.0","method":"hardhat_setBalance","params":["'"${{ secrets.DEPLOYER_ADDRESS }}"'","0x75557863725914323419136"],"id":67}' \
          "${{ vars.AWS_FORK_URL }}"

      - name: "Prepare Python environment"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: "Prep access to S3 bucket"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: "Update setupFork script with the correct FORK RPC URL"
        run: |
          sed -i 's|THE_FORK_URL|"${{ vars.AWS_FORK_URL }}"|' script/setupFork.py

      - name: "Deploy the contracts to EC2 test Hardhat environment"
        run: |
          forge script script/DeployContracts.s.sol --fork-url  ${{ vars.AWS_FORK_URL }} --broadcast -vvvvv --slow --skip-simulation

      - name: Create JSON file
        run: |
          echo '{
            "rpc": "${{ vars.AWS_FORK_URL }}"
            }' > deployments/test_rpc.json

      - name: "Updating AWS S3 bucket with the contract addresses"
        run: |
          aws s3 cp deployments/deployments.json s3://smart-contract-backend-config/addresses/test_fork_leverage_addresses.json --acl public-read
          python script/prep_addresses_json.py
          aws s3 cp deployments/deployments.json s3://smart-contract-backend-config/abis/test_fork_leverage_abis.json --acl public-read
          aws s3 cp deployments/test_rpc.json s3://smart-contract-backend-config/test_fork_rpc.json --acl public-read

      - name: "Add deploy summary"
        run: |
          echo "## Deploy result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  deploy_to_tenderly_demo_node:
    needs: ["deploy_to_ec2_hardhat_test_node"]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: "ubuntu-latest"
    permissions: "write-all"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Prepare Python environment"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: "Prep access to S3 bucket"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: "Update setupFork script with the correct fork RPC URL"
        run: |
          sed -i 's|THE_FORK_URL|"${{ vars.DEMO_RPC }}"|' script/setupFork.py 

      - name: "updating foundry.toml so we can run verify against Tenderly"
        run: |
          python foundry_toml_prep.py

      - name: "Deploy the contracts to Tenderly fork demo environment"
        run: |
          forge script script/DeployContracts.s.sol --fork-url  ${{ vars.DEMO_RPC }} --broadcast --slow --skip-simulation --etherscan-api-key ${{ secrets.API_KEY_TENDERLY }} --verify --verifier-url="${{ secrets.TENDERLY_VERIFIER_URL}}" --chain-id 1337
          

      - name: Create JSON file
        run: |
          echo '{
            "rpc": "${{ vars.DEMO_RPC }}"
            }' > deployments/demo_rpc.json

      - name: "Updating AWS S3 bucket with the contract addresses"
        run: |
          aws s3 cp deployments/deployments.json s3://smart-contract-backend-config/addresses/tenderly_fork_leverage_addresses.json --acl public-read
          python script/prep_addresses_json.py
          aws s3 cp deployments/deployments.json s3://smart-contract-backend-config/abis/tenderly_fork_leverage_abis.json --acl public-read
          aws s3 cp deployments/demo_rpc.json s3://smart-contract-backend-config/tenderly_fork_rpc.json --acl public-read

      - name: "Add deploy summary"
        run: |
          echo "## Deploy result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY
          